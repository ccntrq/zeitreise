#!/usr/bin/env perl
use v5.20;
use feature 'signatures';

use strict;
use warnings;
no warnings 'experimental::signatures';

run(@ARGV);

exit 0;

## subs

sub run ( $mode, $location = undef ) {
    my @modes = qw(edit noop);

    die "mode '$mode' is not supported. supported are: '"
      . join( ', ', @modes ) . "'!"
      if !grep /$mode/, @modes;

    ###########################################################################
    # Mark all commits in the given file for editing.
    ###########################################################################
    if ( $mode eq 'edit' ) {
        spurt( editContent( slurp($location) ), $location );
    }
    ###########################################################################
    # Do nothing...
    ###########################################################################
    elsif ( $mode eq 'noop' ) {

        # do i really need to do this?
        spurt( slurp($location), $location );
    }
}

# This will mark all commit in a rebase commit list for 'edit'
sub editContent($content) {
    $content =~ s/^[^#|\s]\w*/edit/mg;
    return $content;
}

sub slurp($location) {
    local $/ = undef;

    open( my $fh, '<', $location )
      or die "couldn't open commit list at $location: $!";

    my $content = <$fh>;
    close $fh;

    return $content;
}

sub spurt ( $content, $location ) {
    open( my $fh, '>', $location )
      or die "couldn't open commit list at $location: $!";

    print $fh $content;
    close $fh;

    return 1;
}
